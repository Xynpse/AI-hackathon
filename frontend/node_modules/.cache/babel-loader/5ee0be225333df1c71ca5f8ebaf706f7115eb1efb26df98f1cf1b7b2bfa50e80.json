{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jm\\\\Desktop\\\\New folder (3)\\\\ai-hackathon\\\\frontend\\\\src\\\\building.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"sidebar\",\n  children: /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"UEcoManage\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n_c = Sidebar;\nconst BuildingNavbar = ({\n  buildings,\n  onSelectBuilding,\n  activeBuilding\n}) => /*#__PURE__*/_jsxDEV(\"nav\", {\n  className: \"building-navbar\",\n  children: buildings.map(building => /*#__PURE__*/_jsxDEV(\"button\", {\n    className: activeBuilding === building.name ? \"active\" : \"\",\n    onClick: () => onSelectBuilding(building),\n    children: building.name\n  }, building.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 3\n}, this);\n_c2 = BuildingNavbar;\nconst BuildingNavigation = () => {\n  _s();\n  const [buildings, setBuildings] = useState([]);\n  const [rooms, setRooms] = useState([]);\n  const [selectedBuilding, setSelectedBuilding] = useState(null);\n  const [devices, setDevices] = useState([]);\n  const [selectedRoom, setSelectedRoom] = useState(null);\n  const [modalBuildingId, setModalBuildingId] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [showAddModal, setShowAddModal] = useState(false);\n\n  // Modal state\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [newRoomName, setNewRoomName] = useState('');\n  const [newCamera, setNewCamera] = useState(\"\"); // ← state for live_camera\n\n  const [newBuilding, setNewBuilding] = useState({\n    name: '',\n    description: ''\n  });\n  const fetchBuildings = () => {\n    axios.get('http://localhost:5000/api/buildings').then(response => {\n      setBuildings(response.data);\n    }).catch(error => {\n      console.error('Error fetching buildings:', error);\n    });\n  };\n\n  // Call the function inside useEffect to load buildings on mount\n  useEffect(() => {\n    fetchBuildings();\n  }, []);\n  useEffect(() => {\n    if (buildings.length > 0) {\n      fetchRooms(buildings[0]); // Load rooms for the first building on mount\n    }\n  }, [buildings]);\n  const addBuilding = () => {\n    axios.post('http://localhost:5000/api/buildings', newBuilding).then(() => {\n      fetchBuildings();\n      setBuildings([...buildings, newBuilding]);\n      setShowAddModal(false);\n      setNewBuilding({\n        name: '',\n        description: ''\n      });\n    }).catch(error => {\n      console.error('Error adding building:', error);\n    });\n  };\n  const fetchRooms = building => {\n    axios.get(`http://localhost:5000/api/buildings/${building.id}/rooms`).then(response => {\n      setRooms(response.data);\n      setSelectedBuilding(building);\n    }).catch(error => {\n      console.error('Error fetching rooms:', error);\n    });\n  };\n  const addRoom = () => {\n    if (!modalBuildingId) return;\n    axios.post(`http://localhost:5000/api/buildings/${modalBuildingId}/rooms`, {\n      name: newRoomName,\n      live_camera: newCamera\n    }).then(() => {\n      fetchRooms(buildings.find(b => b.id === modalBuildingId)); // Refresh rooms after adding\n      setNewRoomName('');\n      setNewCamera('');\n      setIsModalOpen(false);\n    }).catch(error => {\n      console.error('Error adding room:', error);\n    });\n  };\n  const fetchDevices = room => {\n    axios.get(`http://localhost:5000/api/rooms/${room.id}/devices`).then(response => {\n      setDevices(response.data);\n      setSelectedRoom(room);\n      setShowModal(true);\n    }).catch(error => {\n      console.error('Error fetching devices:', error);\n    });\n  };\n  const closeModal = () => {\n    setShowModal(false);\n    setSelectedRoom(null);\n    setDevices([]);\n  };\n  const toggleModal = () => setIsModalOpen(!isModalOpen);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"UEcoManage Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#475569',\n            marginTop: '10px'\n          },\n          children: \"Monitor and manage buildings, rooms, and devices.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: setShowAddModal,\n            children: \"Add Building\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Edit Building\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BuildingNavbar, {\n        onSelectBuilding: fetchRooms,\n        buildings: buildings,\n        activeBuilding: selectedBuilding,\n        onAddBuilding: () => setShowAddModal(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), showAddModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Add Building\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Building Name\",\n            value: newBuilding.name,\n            onChange: e => setNewBuilding({\n              ...newBuilding,\n              name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Description\",\n            value: newBuilding.description,\n            onChange: e => setNewBuilding({\n              ...newBuilding,\n              description: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addBuilding,\n            children: \"Add Building\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowAddModal(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), selectedBuilding && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"rooms\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rooms-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Rooms in \", selectedBuilding.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"controls-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: toggleModal,\n              children: \"Add Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Edit Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rooms-grid\",\n          children: rooms.map(room => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"room-card\",\n            onClick: () => fetchDevices(room),\n            children: room.name\n          }, room.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: toggleModal,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Add New Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: modalBuildingId,\n            onChange: e => setModalBuildingId(parseInt(e.target.value)),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Building\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 9\n            }, this), buildings.map(building => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: building.id,\n              children: building.name\n            }, building.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 11\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newRoomName,\n            onChange: e => {\n              const building = buildings.find(b => b.id === modalBuildingId);\n              const prefix = building ? `${building.name} ` : '';\n              const inputValue = e.target.value;\n\n              // Update the room name only if it starts with the prefix\n              if (inputValue.startsWith(prefix)) {\n                setNewRoomName(inputValue);\n              } else {\n                setNewRoomName(prefix); // Revert to the prefix if the user tries to change it\n              }\n            },\n            placeholder: \"Room Name (e.g. EN205)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newCamera,\n            onChange: e => setNewCamera(e.target.value),\n            placeholder: \"Camera IP (e.g. 192.168.12)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cancel-btn\",\n              onClick: toggleModal,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addRoom,\n              children: \"Add Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), showModal && selectedRoom && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: closeModal,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Devices in \", selectedRoom.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              maxHeight: '200px',\n              overflowY: 'auto'\n            },\n            children: devices.length > 0 ? devices.map((device, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: device.name\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 46\n            }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"No devices available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-buttons\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cancel-btn\",\n              onClick: closeModal,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(BuildingNavigation, \"VIW4GZBkjJZIuApKtpKcwdqdGfo=\");\n_c3 = BuildingNavigation;\nexport default BuildingNavigation;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Sidebar\");\n$RefreshReg$(_c2, \"BuildingNavbar\");\n$RefreshReg$(_c3, \"BuildingNavigation\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Sidebar","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","BuildingNavbar","buildings","onSelectBuilding","activeBuilding","map","building","name","onClick","id","_c2","BuildingNavigation","_s","setBuildings","rooms","setRooms","selectedBuilding","setSelectedBuilding","devices","setDevices","selectedRoom","setSelectedRoom","modalBuildingId","setModalBuildingId","showModal","setShowModal","showAddModal","setShowAddModal","isModalOpen","setIsModalOpen","newRoomName","setNewRoomName","newCamera","setNewCamera","newBuilding","setNewBuilding","description","fetchBuildings","get","then","response","data","catch","error","console","length","fetchRooms","addBuilding","post","addRoom","live_camera","find","b","fetchDevices","room","closeModal","toggleModal","style","color","marginTop","onAddBuilding","type","placeholder","value","onChange","e","target","parseInt","disabled","prefix","inputValue","startsWith","maxHeight","overflowY","device","i","_c3","$RefreshReg$"],"sources":["C:/Users/jm/Desktop/New folder (3)/ai-hackathon/frontend/src/building.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nconst Sidebar = () => (\r\n  <div className=\"sidebar\">\r\n    <h2>UEcoManage</h2>\r\n    {/* You can add your sidebar links here if needed */}\r\n  </div>\r\n);\r\n\r\nconst BuildingNavbar = ({ buildings, onSelectBuilding, activeBuilding }) => (\r\n  <nav className=\"building-navbar\">\r\n    {buildings.map((building) => (\r\n      <button\r\n        key={building.id}\r\n        className={activeBuilding === building.name ? \"active\" : \"\"}\r\n        onClick={() => onSelectBuilding(building)}\r\n      >\r\n        {building.name}\r\n      </button>\r\n    ))}\r\n  </nav>\r\n);\r\n\r\nconst BuildingNavigation = () => {\r\n  const [buildings, setBuildings] = useState([]);\r\n  const [rooms, setRooms] = useState([]);\r\n  const [selectedBuilding, setSelectedBuilding] = useState(null);\r\n  const [devices, setDevices] = useState([]);\r\n  const [selectedRoom, setSelectedRoom] = useState(null);\r\n\r\n  const [modalBuildingId, setModalBuildingId] = useState('');\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showAddModal, setShowAddModal] = useState(false); \r\n\r\n  // Modal state\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [newRoomName, setNewRoomName] = useState('');\r\n\r\n  const [newCamera, setNewCamera] = useState(\"\");  // ← state for live_camera\r\n\r\n  const [newBuilding, setNewBuilding] = useState({ name: '', description: '' });\r\n\r\n  \r\n  const fetchBuildings = () => {\r\n    axios.get('http://localhost:5000/api/buildings')\r\n      .then((response) => {\r\n        setBuildings(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching buildings:', error);\r\n      });\r\n  };\r\n  \r\n  // Call the function inside useEffect to load buildings on mount\r\n  useEffect(() => {\r\n    fetchBuildings();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (buildings.length > 0) {\r\n      fetchRooms(buildings[0]);  // Load rooms for the first building on mount\r\n    }\r\n  }, [buildings]);\r\n\r\n  const addBuilding = () => {\r\n    axios.post('http://localhost:5000/api/buildings', newBuilding)\r\n      .then(() => {\r\n        fetchBuildings();\r\n        setBuildings([...buildings, newBuilding]);\r\n        setShowAddModal(false);\r\n        setNewBuilding({ name: '', description: '' });\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error adding building:', error);\r\n      });\r\n  };\r\n\r\n  const fetchRooms = (building) => {\r\n    axios.get(`http://localhost:5000/api/buildings/${building.id}/rooms`)\r\n      .then((response) => {\r\n        setRooms(response.data);\r\n        setSelectedBuilding(building);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching rooms:', error);\r\n      });\r\n  };\r\n\r\n  const addRoom = () => {\r\n    if (!modalBuildingId) return;\r\n    axios.post(`http://localhost:5000/api/buildings/${modalBuildingId}/rooms`, { name: newRoomName, live_camera: newCamera })\r\n      .then(() => {\r\n        fetchRooms(buildings.find(b => b.id === modalBuildingId));  // Refresh rooms after adding\r\n        setNewRoomName('');\r\n        setNewCamera('');\r\n        setIsModalOpen(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error adding room:', error);\r\n      });\r\n  };\r\n\r\n  const fetchDevices = (room) => {\r\n    axios.get(`http://localhost:5000/api/rooms/${room.id}/devices`)\r\n      .then((response) => {\r\n        setDevices(response.data);\r\n        setSelectedRoom(room);\r\n        setShowModal(true);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching devices:', error);\r\n      });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    setSelectedRoom(null);\r\n    setDevices([]);\r\n  };\r\n  const toggleModal = () => setIsModalOpen(!isModalOpen);\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <Sidebar />\r\n      <div className=\"main\">\r\n        <header>\r\n          <h1>UEcoManage Admin</h1>\r\n          <p style={{ color: '#475569', marginTop: '10px' }}>\r\n            Monitor and manage buildings, rooms, and devices.\r\n          </p>\r\n\r\n            {/* add building function */}\r\n          <div className=\"controls-right\">\r\n            <button onClick={setShowAddModal}>Add Building</button>\r\n            <button>Edit Building</button>\r\n          </div>\r\n          \r\n          \r\n        </header>\r\n\r\n        <BuildingNavbar\r\n          \r\n          onSelectBuilding={fetchRooms}\r\n          buildings={buildings}\r\n          activeBuilding={selectedBuilding}\r\n          onAddBuilding={() => setShowAddModal(true)}\r\n        />\r\n\r\n        {/* ADD BUILDING MODAL*/}\r\n        {showAddModal && (\r\n          <div className=\"modal-overlay\">\r\n            <div className=\"modal\">\r\n              <h2>Add Building</h2>\r\n              <input type=\"text\" placeholder=\"Building Name\" value={newBuilding.name} onChange={(e) => setNewBuilding({ ...newBuilding, name: e.target.value })} />\r\n              <input type=\"text\" placeholder=\"Description\" value={newBuilding.description} onChange={(e) => setNewBuilding({ ...newBuilding, description: e.target.value })} />\r\n              <button onClick={addBuilding}>Add Building</button>\r\n              <button onClick={() => setShowAddModal(false)}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {selectedBuilding && (\r\n          <section className=\"rooms\">\r\n            <div className=\"rooms-header\">\r\n              <h2>Rooms in {selectedBuilding.name}</h2>             \r\n                {/* add rooms function */}\r\n                <div className=\"controls-right\">\r\n                  <button onClick={toggleModal}>Add Room</button>\r\n                  <button>Edit Room</button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"rooms-grid\">\r\n              {rooms.map((room) => (\r\n                <div\r\n                  key={room.id}\r\n                  className=\"room-card\"\r\n                  onClick={() => fetchDevices(room)}\r\n                >\r\n                  {room.name}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </section>\r\n        )}\r\n        \r\n      {/* Modal for adding a new room */}\r\n      {isModalOpen && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <button className=\"modal-close\" onClick={toggleModal}>×</button>\r\n            <h2>Add New Room</h2>\r\n\r\n    {/* Building Selection Dropdown */}\r\n      <select\r\n        value={modalBuildingId}\r\n        onChange={(e) => setModalBuildingId(parseInt(e.target.value))}\r\n      >\r\n        <option value=\"\" disabled>Select Building</option>\r\n        {buildings.map((building) => (\r\n          <option key={building.id} value={building.id}>\r\n            {building.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n        <input\r\n          type=\"text\"\r\n          value={newRoomName}\r\n          onChange={(e) => {\r\n            const building = buildings.find((b) => b.id === modalBuildingId);\r\n            const prefix = building ? `${building.name} ` : '';\r\n            const inputValue = e.target.value;\r\n        \r\n            // Update the room name only if it starts with the prefix\r\n            if (inputValue.startsWith(prefix)) {\r\n              setNewRoomName(inputValue);\r\n            } else {\r\n              setNewRoomName(prefix);  // Revert to the prefix if the user tries to change it\r\n            }\r\n          }}\r\n          placeholder=\"Room Name (e.g. EN205)\"\r\n        />\r\n\r\n        <input\r\n          type=\"text\"\r\n          value={newCamera}\r\n          onChange={(e) => setNewCamera(e.target.value)}\r\n          placeholder=\"Camera IP (e.g. 192.168.12)\"\r\n        />\r\n            <div className=\"modal-buttons\">\r\n              <button className=\"cancel-btn\" onClick={toggleModal}>Cancel</button>\r\n              <button onClick={addRoom}>Add Room</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n        {/* Modal for Devices */}\r\n        {showModal && selectedRoom && (\r\n          <div className=\"modal-overlay\">\r\n            <div className=\"modal\">\r\n              <button className=\"modal-close\" onClick={closeModal}>×</button>\r\n              <h2>Devices in {selectedRoom.name}</h2>\r\n              <ul style={{ maxHeight: '200px', overflowY: 'auto' }}>\r\n                {devices.length > 0 ? (\r\n                  devices.map((device, i) => <li key={i}>{device.name}</li>)\r\n                ) : (\r\n                  <li>No devices available</li>\r\n                )}\r\n              </ul>\r\n              <div className=\"modal-buttons\">\r\n                <button className=\"cancel-btn\" onClick={closeModal}>Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildingNavigation;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}