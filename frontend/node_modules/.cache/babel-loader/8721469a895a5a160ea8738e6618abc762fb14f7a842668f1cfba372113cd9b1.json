{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jm\\\\Desktop\\\\New folder (3)\\\\ai-hackathon\\\\frontend\\\\src\\\\building.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"sidebar\",\n  children: /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"UEcoManage\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n_c = Sidebar;\nconst BuildingNavbar = ({\n  buildings,\n  onSelectBuilding,\n  activeBuilding\n}) => /*#__PURE__*/_jsxDEV(\"nav\", {\n  className: \"building-navbar\",\n  children: buildings.map(building => /*#__PURE__*/_jsxDEV(\"button\", {\n    className: activeBuilding === building.name ? \"active\" : \"\",\n    onClick: () => onSelectBuilding(building),\n    children: building.name\n  }, building.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 3\n}, this);\n_c2 = BuildingNavbar;\nconst BuildingNavigation = () => {\n  _s();\n  const [buildings, setBuildings] = useState([]);\n  const [rooms, setRooms] = useState([]);\n  const [selectedBuilding, setSelectedBuilding] = useState(null);\n  const [devices, setDevices] = useState([]);\n  const [selectedRoom, setSelectedRoom] = useState(null);\n  const [modalBuildingId, setModalBuildingId] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [showAddModal, setShowAddModal] = useState(false);\n\n  // Modal state\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [newRoomName, setNewRoomName] = useState('');\n  const [newCamera, setNewCamera] = useState(\"\"); // ← state for live_camera\n\n  const [newBuilding, setNewBuilding] = useState({\n    name: '',\n    description: ''\n  });\n\n  //  edita modal \n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [roomToEditId, setRoomToEditId] = useState(null); // Selected room id in the edit modal\n  const [editRoomName, setEditRoomName] = useState('');\n  const [editCamera, setEditCamera] = useState('');\n  const fetchBuildings = () => {\n    axios.get('http://localhost:5000/api/buildings').then(response => {\n      setBuildings(response.data);\n    }).catch(error => {\n      console.error('Error fetching buildings:', error);\n    });\n  };\n\n  // Call the function inside useEffect to load buildings on mount\n  useEffect(() => {\n    fetchBuildings();\n  }, []);\n  useEffect(() => {\n    if (buildings.length > 0) {\n      fetchRooms(buildings[0]); // Load rooms for the first building on mount\n    }\n  }, [buildings]);\n  const addBuilding = () => {\n    axios.post('http://localhost:5000/api/buildings', newBuilding).then(() => {\n      fetchBuildings();\n      setBuildings([...buildings, newBuilding]);\n      setShowAddModal(false);\n      setNewBuilding({\n        name: '',\n        description: ''\n      });\n    }).catch(error => {\n      console.error('Error adding building:', error);\n    });\n  };\n  const fetchRooms = building => {\n    axios.get(`http://localhost:5000/api/buildings/${building.id}/rooms`).then(response => {\n      setRooms(response.data);\n      setSelectedBuilding(building);\n    }).catch(error => {\n      console.error('Error fetching rooms:', error);\n    });\n  };\n  const addRoom = () => {\n    if (!modalBuildingId) return;\n    axios.post(`http://localhost:5000/api/buildings/${modalBuildingId}/rooms`, {\n      name: newRoomName,\n      live_camera: newCamera\n    }).then(() => {\n      fetchRooms(buildings.find(b => b.id === modalBuildingId)); // Refresh rooms after adding\n      setNewRoomName('');\n      setNewCamera('');\n      setIsModalOpen(false);\n    }).catch(error => {\n      console.error('Error adding room:', error);\n    });\n  };\n  const fetchDevices = room => {\n    axios.get(`http://localhost:5000/api/rooms/${room.id}/devices`).then(response => {\n      setDevices(response.data);\n      setSelectedRoom(room);\n      setShowModal(true);\n    }).catch(error => {\n      console.error('Error fetching devices:', error);\n    });\n  };\n  const closeModal = () => {\n    setShowModal(false);\n    setSelectedRoom(null);\n    setDevices([]);\n  };\n  const toggleModal = () => setIsModalOpen(!isModalOpen);\n  const toggleEditModal = () => {\n    setIsEditModalOpen(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"UEcoManage Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#475569',\n            marginTop: '10px'\n          },\n          children: \"Monitor and manage buildings, rooms, and devices.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: setShowAddModal,\n            children: \"Add Building\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Edit Building\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BuildingNavbar, {\n        onSelectBuilding: fetchRooms,\n        buildings: buildings,\n        activeBuilding: selectedBuilding,\n        onAddBuilding: () => setShowAddModal(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), showAddModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Add Building\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Building Name\",\n            value: newBuilding.name,\n            onChange: e => setNewBuilding({\n              ...newBuilding,\n              name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Description\",\n            value: newBuilding.description,\n            onChange: e => setNewBuilding({\n              ...newBuilding,\n              description: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addBuilding,\n            children: \"Add Building\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowAddModal(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), selectedBuilding && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"rooms\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rooms-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Rooms in \", selectedBuilding.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"controls-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: toggleModal,\n              children: \"Add Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: toggleEditModal,\n              children: \"Edit Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rooms-grid\",\n          children: rooms.map(room => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"room-card\",\n            onClick: () => fetchDevices(room),\n            children: room.name\n          }, room.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: toggleModal,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Add New Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: modalBuildingId,\n            onChange: e => setModalBuildingId(parseInt(e.target.value)),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Building\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 9\n            }, this), buildings.map(building => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: building.id,\n              children: building.name\n            }, building.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 11\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newRoomName,\n            onChange: e => {\n              const building = buildings.find(b => b.id === modalBuildingId);\n              const prefix = building ? `${building.name} ` : '';\n              const inputValue = e.target.value;\n\n              // Update the room name only if it starts with the prefix\n              if (inputValue.startsWith(prefix)) {\n                setNewRoomName(inputValue);\n              } else {\n                setNewRoomName(prefix); // Revert to the prefix if the user tries to change it\n              }\n            },\n            placeholder: \"Room Name (e.g. EN205)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newCamera,\n            onChange: e => setNewCamera(e.target.value),\n            placeholder: \"Camera IP (e.g. 192.168.12)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cancel-btn\",\n              onClick: toggleModal,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addRoom,\n              children: \"Add Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), isEditModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: toggleEditModal,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Edit Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: roomToEditId || '',\n            onChange: e => {\n              const selectedId = parseInt(e.target.value);\n              setRoomToEditId(selectedId);\n              // Pre-fill edit inputs when room is selected\n              const room = rooms.find(r => r.id === selectedId);\n              if (room) {\n                setEditRoomName(room.name);\n                setEditCamera(room.camera || ''); // Assuming you have camera info\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this), rooms.map(room => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: room.id,\n              children: room.name\n            }, room.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editRoomName,\n            onChange: e => setEditRoomName(e.target.value),\n            placeholder: \"Room Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editCamera,\n            onChange: e => setEditCamera(e.target.value),\n            placeholder: \"Camera IP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cancel-btn\",\n              onClick: toggleEditModal,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleUpdateRoom,\n              children: \"Update Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this), showModal && selectedRoom && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: closeModal,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Devices in \", selectedRoom.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              maxHeight: '200px',\n              overflowY: 'auto'\n            },\n            children: devices.length > 0 ? devices.map((device, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: device.name\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 46\n            }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"No devices available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-buttons\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cancel-btn\",\n              onClick: closeModal,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(BuildingNavigation, \"xn+Da3tgYIO0OhdpC0DzwVOGUW0=\");\n_c3 = BuildingNavigation;\nexport default BuildingNavigation;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Sidebar\");\n$RefreshReg$(_c2, \"BuildingNavbar\");\n$RefreshReg$(_c3, \"BuildingNavigation\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Sidebar","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","BuildingNavbar","buildings","onSelectBuilding","activeBuilding","map","building","name","onClick","id","_c2","BuildingNavigation","_s","setBuildings","rooms","setRooms","selectedBuilding","setSelectedBuilding","devices","setDevices","selectedRoom","setSelectedRoom","modalBuildingId","setModalBuildingId","showModal","setShowModal","showAddModal","setShowAddModal","isModalOpen","setIsModalOpen","newRoomName","setNewRoomName","newCamera","setNewCamera","newBuilding","setNewBuilding","description","isEditModalOpen","setIsEditModalOpen","roomToEditId","setRoomToEditId","editRoomName","setEditRoomName","editCamera","setEditCamera","fetchBuildings","get","then","response","data","catch","error","console","length","fetchRooms","addBuilding","post","addRoom","live_camera","find","b","fetchDevices","room","closeModal","toggleModal","toggleEditModal","prev","style","color","marginTop","onAddBuilding","type","placeholder","value","onChange","e","target","parseInt","disabled","prefix","inputValue","startsWith","selectedId","r","camera","handleUpdateRoom","maxHeight","overflowY","device","i","_c3","$RefreshReg$"],"sources":["C:/Users/jm/Desktop/New folder (3)/ai-hackathon/frontend/src/building.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nconst Sidebar = () => (\r\n  <div className=\"sidebar\">\r\n    <h2>UEcoManage</h2>\r\n    {/* You can add your sidebar links here if needed */}\r\n  </div>\r\n);\r\n\r\nconst BuildingNavbar = ({ buildings, onSelectBuilding, activeBuilding }) => (\r\n  <nav className=\"building-navbar\">\r\n    {buildings.map((building) => (\r\n      <button\r\n        key={building.id}\r\n        className={activeBuilding === building.name ? \"active\" : \"\"}\r\n        onClick={() => onSelectBuilding(building)}\r\n      >\r\n        {building.name}\r\n      </button>\r\n    ))}\r\n  </nav>\r\n);\r\n\r\nconst BuildingNavigation = () => {\r\n  const [buildings, setBuildings] = useState([]);\r\n  const [rooms, setRooms] = useState([]);\r\n  const [selectedBuilding, setSelectedBuilding] = useState(null);\r\n  const [devices, setDevices] = useState([]);\r\n  const [selectedRoom, setSelectedRoom] = useState(null);\r\n\r\n  const [modalBuildingId, setModalBuildingId] = useState('');\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showAddModal, setShowAddModal] = useState(false); \r\n\r\n  // Modal state\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [newRoomName, setNewRoomName] = useState('');\r\n\r\n  const [newCamera, setNewCamera] = useState(\"\");  // ← state for live_camera\r\n\r\n  const [newBuilding, setNewBuilding] = useState({ name: '', description: '' });\r\n\r\n  //  edita modal \r\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n  const [roomToEditId, setRoomToEditId] = useState(null);  // Selected room id in the edit modal\r\n  const [editRoomName, setEditRoomName] = useState('');\r\n  const [editCamera, setEditCamera] = useState('');\r\n\r\n  const fetchBuildings = () => {\r\n    axios.get('http://localhost:5000/api/buildings')\r\n      .then((response) => {\r\n        setBuildings(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching buildings:', error);\r\n      });\r\n  };\r\n  \r\n  // Call the function inside useEffect to load buildings on mount\r\n  useEffect(() => {\r\n    fetchBuildings();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (buildings.length > 0) {\r\n      fetchRooms(buildings[0]);  // Load rooms for the first building on mount\r\n    }\r\n  }, [buildings]);\r\n\r\n  const addBuilding = () => {\r\n    axios.post('http://localhost:5000/api/buildings', newBuilding)\r\n      .then(() => {\r\n        fetchBuildings();\r\n        setBuildings([...buildings, newBuilding]);\r\n        setShowAddModal(false);\r\n        setNewBuilding({ name: '', description: '' });\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error adding building:', error);\r\n      });\r\n  };\r\n\r\n  const fetchRooms = (building) => {\r\n    axios.get(`http://localhost:5000/api/buildings/${building.id}/rooms`)\r\n      .then((response) => {\r\n        setRooms(response.data);\r\n        setSelectedBuilding(building);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching rooms:', error);\r\n      });\r\n  };\r\n\r\n  const addRoom = () => {\r\n    if (!modalBuildingId) return;\r\n    axios.post(`http://localhost:5000/api/buildings/${modalBuildingId}/rooms`, { name: newRoomName, live_camera: newCamera })\r\n      .then(() => {\r\n        fetchRooms(buildings.find(b => b.id === modalBuildingId));  // Refresh rooms after adding\r\n        setNewRoomName('');\r\n        setNewCamera('');\r\n        setIsModalOpen(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error adding room:', error);\r\n      });\r\n  };\r\n\r\n  const fetchDevices = (room) => {\r\n    axios.get(`http://localhost:5000/api/rooms/${room.id}/devices`)\r\n      .then((response) => {\r\n        setDevices(response.data);\r\n        setSelectedRoom(room);\r\n        setShowModal(true);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching devices:', error);\r\n      });\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    setSelectedRoom(null);\r\n    setDevices([]);\r\n  };\r\n  const toggleModal = () => setIsModalOpen(!isModalOpen);\r\n\r\n  const toggleEditModal = () => {\r\n    setIsEditModalOpen(prev => !prev);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <Sidebar />\r\n      <div className=\"main\">\r\n        <header>\r\n          <h1>UEcoManage Admin</h1>\r\n          <p style={{ color: '#475569', marginTop: '10px' }}>\r\n            Monitor and manage buildings, rooms, and devices.\r\n          </p>\r\n\r\n            {/* add building function */}\r\n          <div className=\"controls-right\">\r\n            <button onClick={setShowAddModal}>Add Building</button>\r\n            <button>Edit Building</button>\r\n          </div>\r\n          \r\n          \r\n        </header>\r\n\r\n        <BuildingNavbar\r\n          \r\n          onSelectBuilding={fetchRooms}\r\n          buildings={buildings}\r\n          activeBuilding={selectedBuilding}\r\n          onAddBuilding={() => setShowAddModal(true)}\r\n        />\r\n\r\n        {/* ADD BUILDING MODAL*/}\r\n        {showAddModal && (\r\n          <div className=\"modal-overlay\">\r\n            <div className=\"modal\">\r\n              <h2>Add Building</h2>\r\n              <input type=\"text\" placeholder=\"Building Name\" value={newBuilding.name} onChange={(e) => setNewBuilding({ ...newBuilding, name: e.target.value })} />\r\n              <input type=\"text\" placeholder=\"Description\" value={newBuilding.description} onChange={(e) => setNewBuilding({ ...newBuilding, description: e.target.value })} />\r\n              <button onClick={addBuilding}>Add Building</button>\r\n              <button onClick={() => setShowAddModal(false)}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {selectedBuilding && (\r\n          <section className=\"rooms\">\r\n            <div className=\"rooms-header\">\r\n              <h2>Rooms in {selectedBuilding.name}</h2>             \r\n                {/* add rooms function */}\r\n                <div className=\"controls-right\">\r\n                  <button onClick={toggleModal}>Add Room</button>\r\n                  <button onClick={toggleEditModal}>Edit Room</button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"rooms-grid\">\r\n              {rooms.map((room) => (\r\n                <div\r\n                  key={room.id}\r\n                  className=\"room-card\"\r\n                  onClick={() => fetchDevices(room)}\r\n                >\r\n                  {room.name}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </section>\r\n        )}\r\n        \r\n      {/* Modal for adding a new room */}\r\n      {isModalOpen && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <button className=\"modal-close\" onClick={toggleModal}>×</button>\r\n            <h2>Add New Room</h2>\r\n\r\n    {/* Building Selection Dropdown */}\r\n      <select\r\n        value={modalBuildingId}\r\n        onChange={(e) => setModalBuildingId(parseInt(e.target.value))}\r\n      >\r\n        <option value=\"\" disabled>Select Building</option>\r\n        {buildings.map((building) => (\r\n          <option key={building.id} value={building.id}>\r\n            {building.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n        <input\r\n          type=\"text\"\r\n          value={newRoomName}\r\n          onChange={(e) => {\r\n            const building = buildings.find((b) => b.id === modalBuildingId);\r\n            const prefix = building ? `${building.name} ` : '';\r\n            const inputValue = e.target.value;\r\n        \r\n            // Update the room name only if it starts with the prefix\r\n            if (inputValue.startsWith(prefix)) {\r\n              setNewRoomName(inputValue);\r\n            } else {\r\n              setNewRoomName(prefix);  // Revert to the prefix if the user tries to change it\r\n            }\r\n          }}\r\n          placeholder=\"Room Name (e.g. EN205)\"\r\n        />\r\n\r\n        <input\r\n          type=\"text\"\r\n          value={newCamera}\r\n          onChange={(e) => setNewCamera(e.target.value)}\r\n          placeholder=\"Camera IP (e.g. 192.168.12)\"\r\n        />\r\n            <div className=\"modal-buttons\">\r\n              <button className=\"cancel-btn\" onClick={toggleModal}>Cancel</button>\r\n              <button onClick={addRoom}>Add Room</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n        {/* Modal edit*/}\r\n        {isEditModalOpen && (\r\n          <div className=\"modal-overlay\">\r\n            <div className=\"modal\">\r\n              <button className=\"modal-close\" onClick={toggleEditModal}>×</button>\r\n              <h2>Edit Room</h2>\r\n\r\n              {/* Dropdown to select room */}\r\n              <select\r\n                value={roomToEditId || ''}\r\n                onChange={(e) => {\r\n                  const selectedId = parseInt(e.target.value);\r\n                  setRoomToEditId(selectedId);\r\n                  // Pre-fill edit inputs when room is selected\r\n                  const room = rooms.find(r => r.id === selectedId);\r\n                  if (room) {\r\n                    setEditRoomName(room.name);\r\n                    setEditCamera(room.camera || ''); // Assuming you have camera info\r\n                  }\r\n                }}\r\n              >\r\n                <option value=\"\" disabled>Select Room</option>\r\n                {rooms.map(room => (\r\n                  <option key={room.id} value={room.id}>{room.name}</option>\r\n                ))}\r\n              </select>\r\n\r\n              {/* Edit inputs */}\r\n              <input\r\n                type=\"text\"\r\n                value={editRoomName}\r\n                onChange={(e) => setEditRoomName(e.target.value)}\r\n                placeholder=\"Room Name\"\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                value={editCamera}\r\n                onChange={(e) => setEditCamera(e.target.value)}\r\n                placeholder=\"Camera IP\"\r\n              />\r\n\r\n              <div className=\"modal-buttons\">\r\n                <button className=\"cancel-btn\" onClick={toggleEditModal}>Cancel</button>\r\n                <button onClick={handleUpdateRoom}>Update Room</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {/* Modal for Devices */}\r\n        {showModal && selectedRoom && (\r\n          <div className=\"modal-overlay\">\r\n            <div className=\"modal\">\r\n              <button className=\"modal-close\" onClick={closeModal}>×</button>\r\n              <h2>Devices in {selectedRoom.name}</h2>\r\n              <ul style={{ maxHeight: '200px', overflowY: 'auto' }}>\r\n                {devices.length > 0 ? (\r\n                  devices.map((device, i) => <li key={i}>{device.name}</li>)\r\n                ) : (\r\n                  <li>No devices available</li>\r\n                )}\r\n              </ul>\r\n              <div className=\"modal-buttons\">\r\n                <button className=\"cancel-btn\" onClick={closeModal}>Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildingNavigation;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}