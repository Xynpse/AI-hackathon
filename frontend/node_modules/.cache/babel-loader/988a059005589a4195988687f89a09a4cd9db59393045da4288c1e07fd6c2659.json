{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jm\\\\Desktop\\\\New folder (3)\\\\ai-hackathon\\\\frontend\\\\src\\\\building.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"sidebar\",\n  children: /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"UEcoManage\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n_c = Sidebar;\nconst BuildingNavbar = ({\n  buildings,\n  onSelectBuilding,\n  activeBuilding\n}) => /*#__PURE__*/_jsxDEV(\"nav\", {\n  className: \"building-navbar\",\n  children: buildings.map(building => /*#__PURE__*/_jsxDEV(\"button\", {\n    className: (activeBuilding === null || activeBuilding === void 0 ? void 0 : activeBuilding.id) === building.id ? \"active\" : \"\",\n    onClick: () => onSelectBuilding(building),\n    children: building.name\n  }, building.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this);\n_c2 = BuildingNavbar;\nconst BuildingNavigation = () => {\n  _s();\n  const [buildings, setBuildings] = useState([]);\n  const [rooms, setRooms] = useState([]);\n  const [selectedBuilding, setSelectedBuilding] = useState(null);\n  const [devices, setDevices] = useState([]);\n  const [selectedRoom, setSelectedRoom] = useState(null);\n\n  // Modal states\n  const [showDevicesModal, setShowDevicesModal] = useState(false);\n  const [showAddBuildingModal, setShowAddBuildingModal] = useState(false);\n  const [showAddRoomModal, setShowAddRoomModal] = useState(false);\n  const [showEditRoomModal, setShowEditRoomModal] = useState(false);\n\n  // Add building state\n  const [newBuilding, setNewBuilding] = useState({\n    name: '',\n    description: ''\n  });\n\n  // Add room state\n  const [newRoomName, setNewRoomName] = useState('');\n  const [newRoomBuildingId, setNewRoomBuildingId] = useState('');\n  const [newRoomCamera, setNewRoomCamera] = useState('');\n\n  // Edit room state\n  const [roomToEditId, setRoomToEditId] = useState(null);\n  const [editRoomName, setEditRoomName] = useState('');\n  const [editRoomCamera, setEditRoomCamera] = useState('');\n  // Edit builoding\n  const [showEditBuildingModal, setShowEditBuildingModal] = useState(false);\n  const [buildingToEdit, setBuildingToEdit] = useState(null);\n  const [editBuildingName, setEditBuildingName] = useState('');\n  const [editBuildingDescription, setEditBuildingDescription] = useState('');\n\n  // Fetch buildings from API\n  const fetchBuildings = () => {\n    axios.get('http://localhost:5000/api/buildings').then(response => {\n      setBuildings(response.data);\n    }).catch(error => {\n      console.error('Error fetching buildings:', error);\n    });\n  };\n  useEffect(() => {\n    fetchBuildings();\n  }, []);\n\n  // When buildings load, set selected building and fetch its rooms\n  useEffect(() => {\n    if (buildings.length > 0) {\n      setSelectedBuilding(buildings[0]);\n      fetchRooms(buildings[0]);\n    }\n  }, [buildings]);\n\n  // Fetch rooms for a building\n  const fetchRooms = building => {\n    axios.get(`http://localhost:5000/api/buildings/${building.id}/rooms`).then(response => {\n      setRooms(response.data);\n      setSelectedBuilding(building);\n    }).catch(error => {\n      console.error('Error fetching rooms:', error);\n    });\n  };\n\n  // Add a new building\n  const addBuilding = () => {\n    if (!newBuilding.name.trim()) {\n      alert('Building name is required');\n      return;\n    }\n    axios.post('http://localhost:5000/api/buildings', newBuilding).then(() => {\n      fetchBuildings(); // Refresh buildings from backend\n      setShowAddBuildingModal(false);\n      setNewBuilding({\n        name: '',\n        description: ''\n      });\n    }).catch(error => {\n      console.error('Error adding building:', error);\n    });\n  };\n\n  // Add a new room\n  const addRoom = () => {\n    if (!newRoomBuildingId) {\n      alert('Please select a building for the new room');\n      return;\n    }\n    if (!newRoomName.trim()) {\n      alert('Room name is required');\n      return;\n    }\n    axios.post(`http://localhost:5000/api/buildings/${newRoomBuildingId}/rooms`, {\n      name: newRoomName,\n      live_camera: newRoomCamera\n    }).then(() => {\n      const building = buildings.find(b => b.id === newRoomBuildingId);\n      if (building) {\n        fetchRooms(building);\n      }\n      setNewRoomName('');\n      setNewRoomCamera('');\n      setNewRoomBuildingId('');\n      setShowAddRoomModal(false);\n    }).catch(error => {\n      console.error('Error adding room:', error);\n    });\n  };\n\n  // Update building info\n  const handleUpdateBuilding = () => {\n    if (!buildingToEdit) {\n      alert('Please select a building to edit');\n      return;\n    }\n    if (!editBuildingName.trim()) {\n      alert('Building name cannot be empty');\n      return;\n    }\n    axios.put(`http://localhost:5000/api/buildings/${buildingToEdit.id}`, {\n      name: editBuildingName,\n      description: editBuildingDescription\n    }).then(() => {\n      fetchBuildings(); // Refresh the buildings list\n      setShowEditBuildingModal(false);\n      setBuildingToEdit(null);\n      setEditBuildingName('');\n      setEditBuildingDescription('');\n    }).catch(error => {\n      console.error('Error updating building:', error);\n    });\n  };\n  // Update room info\n  const handleUpdateRoom = () => {\n    if (!roomToEditId) {\n      alert('Please select a room to edit');\n      return;\n    }\n    if (!editRoomName.trim()) {\n      alert('Room name cannot be empty');\n      return;\n    }\n    axios.put(`http://localhost:5000/api/rooms/${roomToEditId}`, {\n      name: editRoomName,\n      live_camera: editRoomCamera\n    }).then(() => {\n      if (selectedBuilding) {\n        fetchRooms(selectedBuilding);\n      }\n      setShowEditRoomModal(false);\n      setRoomToEditId(null);\n      setEditRoomName('');\n      setEditRoomCamera('');\n    }).catch(err => {\n      console.error('Failed to update room', err);\n    });\n  };\n\n  // Fetch devices for a room and open modal\n  const fetchDevices = room => {\n    axios.get(`http://localhost:5000/api/rooms/${room.id}/devices`).then(response => {\n      setDevices(response.data);\n      setSelectedRoom(room);\n      setShowDevicesModal(true);\n    }).catch(error => {\n      console.error('Error fetching devices:', error);\n    });\n  };\n  const closeDevicesModal = () => {\n    setShowDevicesModal(false);\n    setSelectedRoom(null);\n    setDevices([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"UEcoManage Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#475569',\n            marginTop: '10px'\n          },\n          children: \"Monitor and manage buildings, rooms, and devices.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowAddBuildingModal(true),\n            children: \"Add Building\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (!selectedBuilding) {\n                alert(\"Please select a building to edit\");\n                return;\n              }\n              setBuildingToEdit(selectedBuilding);\n              setEditBuildingName(selectedBuilding.name);\n              setEditBuildingDescription(selectedBuilding.description || '');\n              setShowEditBuildingModal(true);\n            },\n            children: \"Edit Building\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BuildingNavbar, {\n        buildings: buildings,\n        activeBuilding: selectedBuilding,\n        onSelectBuilding: fetchRooms\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), showAddBuildingModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Add Building\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Building Name\",\n            value: newBuilding.name,\n            onChange: e => setNewBuilding({\n              ...newBuilding,\n              name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Description\",\n            value: newBuilding.description,\n            onChange: e => setNewBuilding({\n              ...newBuilding,\n              description: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addBuilding,\n              children: \"Add Building\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowAddBuildingModal(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this), showEditBuildingModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: () => setShowEditBuildingModal(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Edit Building\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: (buildingToEdit === null || buildingToEdit === void 0 ? void 0 : buildingToEdit.id) || '',\n            onChange: e => {\n              const selectedId = parseInt(e.target.value);\n              const building = buildings.find(b => b.id === selectedId);\n              setBuildingToEdit(building);\n              setEditBuildingName((building === null || building === void 0 ? void 0 : building.name) || '');\n              setEditBuildingDescription((building === null || building === void 0 ? void 0 : building.description) || '');\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Building\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this), buildings.map(building => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: building.id,\n              children: building.name\n            }, building.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Building Name\",\n            value: editBuildingName,\n            onChange: e => setEditBuildingName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Description\",\n            value: editBuildingDescription,\n            onChange: e => setEditBuildingDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleUpdateBuilding,\n              children: \"Update Building\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowEditBuildingModal(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), selectedBuilding && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"rooms\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rooms-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Rooms in \", selectedBuilding.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"controls-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setShowAddRoomModal(true);\n                setNewRoomBuildingId(selectedBuilding.id);\n              },\n              children: \"Add Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowEditRoomModal(true),\n              children: \"Edit Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rooms-grid\",\n          children: rooms.map(room => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"room-card\",\n            onClick: () => fetchDevices(room),\n            children: room.name\n          }, room.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this), showAddRoomModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: () => setShowAddRoomModal(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Add New Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newRoomBuildingId,\n            onChange: e => setNewRoomBuildingId(parseInt(e.target.value)),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Building\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this), buildings.map(b => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: b.id,\n              children: b.name\n            }, b.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newRoomName,\n            onChange: e => setNewRoomName(e.target.value),\n            placeholder: \"Room Name (e.g. EN205)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newRoomCamera,\n            onChange: e => setNewRoomCamera(e.target.value),\n            placeholder: \"Camera IP (e.g. 192.168.12)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cancel-btn\",\n              onClick: () => setShowAddRoomModal(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addRoom,\n              children: \"Add Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }, this), showEditRoomModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: () => setShowEditRoomModal(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Edit Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: roomToEditId || '',\n            onChange: e => {\n              const selectedId = parseInt(e.target.value);\n              setRoomToEditId(selectedId);\n              const room = rooms.find(r => r.id === selectedId);\n              if (room) {\n                setEditRoomName(room.name);\n                setEditRoomCamera(room.live_camera || '');\n              } else {\n                setEditRoomName('');\n                setEditRoomCamera('');\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 17\n            }, this), rooms.map(room => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: room.id,\n              children: room.name\n            }, room.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editRoomName,\n            onChange: e => setEditRoomName(e.target.value),\n            placeholder: \"Room Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editRoomCamera,\n            onChange: e => setEditRoomCamera(e.target.value),\n            placeholder: \"Camera IP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cancel-btn\",\n              onClick: () => setShowEditRoomModal(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleUpdateRoom,\n              children: \"Update Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 11\n      }, this), showDevicesModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        onClick: closeDevicesModal,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal\",\n          onClick: e => e.stopPropagation(),\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: closeDevicesModal,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Devices in \", selectedRoom === null || selectedRoom === void 0 ? void 0 : selectedRoom.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: devices.map(device => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: device.name\n            }, device.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n};\n_s(BuildingNavigation, \"zI374SsANSCLQj2DDlh5QXhKpX8=\");\n_c3 = BuildingNavigation;\nexport default BuildingNavigation;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Sidebar\");\n$RefreshReg$(_c2, \"BuildingNavbar\");\n$RefreshReg$(_c3, \"BuildingNavigation\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Sidebar","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","BuildingNavbar","buildings","onSelectBuilding","activeBuilding","map","building","id","onClick","name","_c2","BuildingNavigation","_s","setBuildings","rooms","setRooms","selectedBuilding","setSelectedBuilding","devices","setDevices","selectedRoom","setSelectedRoom","showDevicesModal","setShowDevicesModal","showAddBuildingModal","setShowAddBuildingModal","showAddRoomModal","setShowAddRoomModal","showEditRoomModal","setShowEditRoomModal","newBuilding","setNewBuilding","description","newRoomName","setNewRoomName","newRoomBuildingId","setNewRoomBuildingId","newRoomCamera","setNewRoomCamera","roomToEditId","setRoomToEditId","editRoomName","setEditRoomName","editRoomCamera","setEditRoomCamera","showEditBuildingModal","setShowEditBuildingModal","buildingToEdit","setBuildingToEdit","editBuildingName","setEditBuildingName","editBuildingDescription","setEditBuildingDescription","fetchBuildings","get","then","response","data","catch","error","console","length","fetchRooms","addBuilding","trim","alert","post","addRoom","live_camera","find","b","handleUpdateBuilding","put","handleUpdateRoom","err","fetchDevices","room","closeDevicesModal","style","color","marginTop","type","placeholder","value","onChange","e","target","selectedId","parseInt","disabled","r","stopPropagation","device","_c3","$RefreshReg$"],"sources":["C:/Users/jm/Desktop/New folder (3)/ai-hackathon/frontend/src/building.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nconst Sidebar = () => (\r\n  <div className=\"sidebar\">\r\n    <h2>UEcoManage</h2>\r\n  </div>\r\n);\r\n\r\nconst BuildingNavbar = ({ buildings, onSelectBuilding, activeBuilding }) => (\r\n  <nav className=\"building-navbar\">\r\n    {buildings.map((building) => (\r\n      <button\r\n        key={building.id}\r\n        className={activeBuilding?.id === building.id ? \"active\" : \"\"}\r\n        onClick={() => onSelectBuilding(building)}\r\n      >\r\n        {building.name}\r\n      </button>\r\n    ))}\r\n  </nav>\r\n);\r\n\r\nconst BuildingNavigation = () => {\r\n  const [buildings, setBuildings] = useState([]);\r\n  const [rooms, setRooms] = useState([]);\r\n  const [selectedBuilding, setSelectedBuilding] = useState(null);\r\n  const [devices, setDevices] = useState([]);\r\n  const [selectedRoom, setSelectedRoom] = useState(null);\r\n\r\n  // Modal states\r\n  const [showDevicesModal, setShowDevicesModal] = useState(false);\r\n  const [showAddBuildingModal, setShowAddBuildingModal] = useState(false);\r\n  const [showAddRoomModal, setShowAddRoomModal] = useState(false);\r\n  const [showEditRoomModal, setShowEditRoomModal] = useState(false);\r\n\r\n  // Add building state\r\n  const [newBuilding, setNewBuilding] = useState({ name: '', description: '' });\r\n\r\n  // Add room state\r\n  const [newRoomName, setNewRoomName] = useState('');\r\n  const [newRoomBuildingId, setNewRoomBuildingId] = useState('');\r\n  const [newRoomCamera, setNewRoomCamera] = useState('');\r\n\r\n  // Edit room state\r\n  const [roomToEditId, setRoomToEditId] = useState(null);\r\n  const [editRoomName, setEditRoomName] = useState('');\r\n  const [editRoomCamera, setEditRoomCamera] = useState('');\r\n  // Edit builoding\r\n  const [showEditBuildingModal, setShowEditBuildingModal] = useState(false);\r\n  const [buildingToEdit, setBuildingToEdit] = useState(null);\r\n  const [editBuildingName, setEditBuildingName] = useState('');\r\n  const [editBuildingDescription, setEditBuildingDescription] = useState('');\r\n\r\n\r\n  // Fetch buildings from API\r\n  const fetchBuildings = () => {\r\n    axios.get('http://localhost:5000/api/buildings')\r\n      .then((response) => {\r\n        setBuildings(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching buildings:', error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchBuildings();\r\n  }, []);\r\n\r\n  // When buildings load, set selected building and fetch its rooms\r\n  useEffect(() => {\r\n    if (buildings.length > 0) {\r\n      setSelectedBuilding(buildings[0]);\r\n      fetchRooms(buildings[0]);\r\n    }\r\n  }, [buildings]);\r\n\r\n  // Fetch rooms for a building\r\n  const fetchRooms = (building) => {\r\n    axios.get(`http://localhost:5000/api/buildings/${building.id}/rooms`)\r\n      .then((response) => {\r\n        setRooms(response.data);\r\n        setSelectedBuilding(building);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching rooms:', error);\r\n      });\r\n  };\r\n\r\n  // Add a new building\r\n  const addBuilding = () => {\r\n    if (!newBuilding.name.trim()) {\r\n      alert('Building name is required');\r\n      return;\r\n    }\r\n\r\n    axios.post('http://localhost:5000/api/buildings', newBuilding)\r\n      .then(() => {\r\n        fetchBuildings(); // Refresh buildings from backend\r\n        setShowAddBuildingModal(false);\r\n        setNewBuilding({ name: '', description: '' });\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error adding building:', error);\r\n      });\r\n  };\r\n\r\n  // Add a new room\r\n  const addRoom = () => {\r\n    if (!newRoomBuildingId) {\r\n      alert('Please select a building for the new room');\r\n      return;\r\n    }\r\n    if (!newRoomName.trim()) {\r\n      alert('Room name is required');\r\n      return;\r\n    }\r\n\r\n    axios.post(`http://localhost:5000/api/buildings/${newRoomBuildingId}/rooms`, {\r\n      name: newRoomName,\r\n      live_camera: newRoomCamera,\r\n    })\r\n      .then(() => {\r\n        const building = buildings.find(b => b.id === newRoomBuildingId);\r\n        if (building) {\r\n          fetchRooms(building);\r\n        }\r\n        setNewRoomName('');\r\n        setNewRoomCamera('');\r\n        setNewRoomBuildingId('');\r\n        setShowAddRoomModal(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error adding room:', error);\r\n      });\r\n  };\r\n\r\n  // Update building info\r\n  const handleUpdateBuilding = () => {\r\n    if (!buildingToEdit) {\r\n      alert('Please select a building to edit');\r\n      return;\r\n    }\r\n    if (!editBuildingName.trim()) {\r\n      alert('Building name cannot be empty');\r\n      return;\r\n    }\r\n  \r\n    axios.put(`http://localhost:5000/api/buildings/${buildingToEdit.id}`, {\r\n      name: editBuildingName,\r\n      description: editBuildingDescription,\r\n    })\r\n      .then(() => {\r\n        fetchBuildings(); // Refresh the buildings list\r\n        setShowEditBuildingModal(false);\r\n        setBuildingToEdit(null);\r\n        setEditBuildingName('');\r\n        setEditBuildingDescription('');\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error updating building:', error);\r\n      });\r\n  };\r\n  // Update room info\r\n  const handleUpdateRoom = () => {\r\n    if (!roomToEditId) {\r\n      alert('Please select a room to edit');\r\n      return;\r\n    }\r\n    if (!editRoomName.trim()) {\r\n      alert('Room name cannot be empty');\r\n      return;\r\n    }\r\n\r\n    axios.put(`http://localhost:5000/api/rooms/${roomToEditId}`, {\r\n      name: editRoomName,\r\n      live_camera: editRoomCamera,\r\n    })\r\n      .then(() => {\r\n        if (selectedBuilding) {\r\n          fetchRooms(selectedBuilding);\r\n        }\r\n        setShowEditRoomModal(false);\r\n        setRoomToEditId(null);\r\n        setEditRoomName('');\r\n        setEditRoomCamera('');\r\n      })\r\n      .catch(err => {\r\n        console.error('Failed to update room', err);\r\n      });\r\n  };\r\n\r\n  // Fetch devices for a room and open modal\r\n  const fetchDevices = (room) => {\r\n    axios.get(`http://localhost:5000/api/rooms/${room.id}/devices`)\r\n      .then((response) => {\r\n        setDevices(response.data);\r\n        setSelectedRoom(room);\r\n        setShowDevicesModal(true);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching devices:', error);\r\n      });\r\n  };\r\n\r\n  const closeDevicesModal = () => {\r\n    setShowDevicesModal(false);\r\n    setSelectedRoom(null);\r\n    setDevices([]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <Sidebar />\r\n      <div className=\"main\">\r\n        <header>\r\n          <h1>UEcoManage Admin</h1>\r\n          <p style={{ color: '#475569', marginTop: '10px' }}>\r\n            Monitor and manage buildings, rooms, and devices.\r\n          </p>\r\n\r\n          <div className=\"controls-right\">\r\n            <button onClick={() => setShowAddBuildingModal(true)}>Add Building</button>\r\n            {/* You can implement Edit Building button logic later */}\r\n            <button \r\n              onClick={() => {\r\n                if (!selectedBuilding) {\r\n                  alert(\"Please select a building to edit\");\r\n                  return;\r\n                }\r\n                setBuildingToEdit(selectedBuilding);\r\n                setEditBuildingName(selectedBuilding.name);\r\n                setEditBuildingDescription(selectedBuilding.description || '');\r\n                setShowEditBuildingModal(true);\r\n              }}\r\n            >\r\n              Edit Building\r\n            </button>\r\n          </div>\r\n        </header>\r\n\r\n        <BuildingNavbar\r\n          buildings={buildings}\r\n          activeBuilding={selectedBuilding}\r\n          onSelectBuilding={fetchRooms}\r\n        />\r\n\r\n        {/* Add Building Modal */}\r\n        {showAddBuildingModal && (\r\n          <div className=\"modal-overlay\">\r\n            <div className=\"modal\">\r\n              <h2>Add Building</h2>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Building Name\"\r\n                value={newBuilding.name}\r\n                onChange={(e) => setNewBuilding({ ...newBuilding, name: e.target.value })}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Description\"\r\n                value={newBuilding.description}\r\n                onChange={(e) => setNewBuilding({ ...newBuilding, description: e.target.value })}\r\n              />\r\n              <div className=\"modal-buttons\">\r\n                <button onClick={addBuilding}>Add Building</button>\r\n                <button onClick={() => setShowAddBuildingModal(false)}>Cancel</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {/* Edit Building Modal */}\r\n        {showEditBuildingModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <button className=\"modal-close\" onClick={() => setShowEditBuildingModal(false)}>×</button>\r\n            <h2>Edit Building</h2>\r\n\r\n            <select\r\n              value={buildingToEdit?.id || ''}\r\n              onChange={(e) => {\r\n                const selectedId = parseInt(e.target.value);\r\n                const building = buildings.find(b => b.id === selectedId);\r\n                setBuildingToEdit(building);\r\n                setEditBuildingName(building?.name || '');\r\n                setEditBuildingDescription(building?.description || '');\r\n              }}\r\n            >\r\n              <option value=\"\" disabled>Select Building</option>\r\n              {buildings.map(building => (\r\n                <option key={building.id} value={building.id}>{building.name}</option>\r\n              ))}\r\n            </select>\r\n\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Building Name\"\r\n              value={editBuildingName}\r\n              onChange={(e) => setEditBuildingName(e.target.value)}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Description\"\r\n              value={editBuildingDescription}\r\n              onChange={(e) => setEditBuildingDescription(e.target.value)}\r\n            />\r\n\r\n            <div className=\"modal-buttons\">\r\n              <button onClick={handleUpdateBuilding}>Update Building</button>\r\n              <button onClick={() => setShowEditBuildingModal(false)}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n        {/* Rooms Section */}\r\n        {selectedBuilding && (\r\n          <section className=\"rooms\">\r\n            <div className=\"rooms-header\">\r\n              <h2>Rooms in {selectedBuilding.name}</h2>\r\n              <div className=\"controls-right\">\r\n                <button onClick={() => {\r\n                  setShowAddRoomModal(true);\r\n                  setNewRoomBuildingId(selectedBuilding.id);\r\n                }}>\r\n                  Add Room\r\n                </button>\r\n                <button onClick={() => setShowEditRoomModal(true)}>Edit Room</button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"rooms-grid\">\r\n              {rooms.map((room) => (\r\n                <div\r\n                  key={room.id}\r\n                  className=\"room-card\"\r\n                  onClick={() => fetchDevices(room)}\r\n                >\r\n                  {room.name}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </section>\r\n        )}\r\n\r\n        {/* Add Room Modal */}\r\n        {showAddRoomModal && (\r\n          <div className=\"modal-overlay\">\r\n            <div className=\"modal\">\r\n              <button className=\"modal-close\" onClick={() => setShowAddRoomModal(false)}>×</button>\r\n              <h2>Add New Room</h2>\r\n\r\n              <select\r\n                value={newRoomBuildingId}\r\n                onChange={(e) => setNewRoomBuildingId(parseInt(e.target.value))}\r\n              >\r\n                <option value=\"\" disabled>Select Building</option>\r\n                {buildings.map((b) => (\r\n                  <option key={b.id} value={b.id}>{b.name}</option>\r\n                ))}\r\n              </select>\r\n\r\n              <input\r\n                type=\"text\"\r\n                value={newRoomName}\r\n                onChange={(e) => setNewRoomName(e.target.value)}\r\n                placeholder=\"Room Name (e.g. EN205)\"\r\n              />\r\n\r\n              <input\r\n                type=\"text\"\r\n                value={newRoomCamera}\r\n                onChange={(e) => setNewRoomCamera(e.target.value)}\r\n                placeholder=\"Camera IP (e.g. 192.168.12)\"\r\n              />\r\n\r\n              <div className=\"modal-buttons\">\r\n                <button className=\"cancel-btn\" onClick={() => setShowAddRoomModal(false)}>Cancel</button>\r\n                <button onClick={addRoom}>Add Room</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Edit Room Modal */}\r\n        {showEditRoomModal && (\r\n          <div className=\"modal-overlay\">\r\n            <div className=\"modal\">\r\n              <button className=\"modal-close\" onClick={() => setShowEditRoomModal(false)}>×</button>\r\n              <h2>Edit Room</h2>\r\n\r\n              <select\r\n                value={roomToEditId || ''}\r\n                onChange={(e) => {\r\n                  const selectedId = parseInt(e.target.value);\r\n                  setRoomToEditId(selectedId);\r\n\r\n                  const room = rooms.find(r => r.id === selectedId);\r\n                  if (room) {\r\n                    setEditRoomName(room.name);\r\n                    setEditRoomCamera(room.live_camera || '');\r\n                  } else {\r\n                    setEditRoomName('');\r\n                    setEditRoomCamera('');\r\n                  }\r\n                }}\r\n              >\r\n                <option value=\"\" disabled>Select Room</option>\r\n                {rooms.map(room => (\r\n                  <option key={room.id} value={room.id}>{room.name}</option>\r\n                ))}\r\n              </select>\r\n\r\n              <input\r\n                type=\"text\"\r\n                value={editRoomName}\r\n                onChange={(e) => setEditRoomName(e.target.value)}\r\n                placeholder=\"Room Name\"\r\n              />\r\n\r\n              <input\r\n                type=\"text\"\r\n                value={editRoomCamera}\r\n                onChange={(e) => setEditRoomCamera(e.target.value)}\r\n                placeholder=\"Camera IP\"\r\n              />\r\n\r\n              <div className=\"modal-buttons\">\r\n                <button className=\"cancel-btn\" onClick={() => setShowEditRoomModal(false)}>Cancel</button>\r\n                <button onClick={handleUpdateRoom}>Update Room</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Devices Modal */}\r\n        {showDevicesModal && (\r\n          <div className=\"modal-overlay\" onClick={closeDevicesModal}>\r\n            <div className=\"modal\" onClick={(e) => e.stopPropagation()}>\r\n              <button className=\"modal-close\" onClick={closeDevicesModal}>×</button>\r\n              <h2>Devices in {selectedRoom?.name}</h2>\r\n              <ul>\r\n                {devices.map(device => (\r\n                  <li key={device.id}>{device.name}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildingNavigation;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}